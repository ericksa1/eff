const rootDiv = document.getElementById('root');

function renderSignUp() {
    rootDiv.innerHTML = `
        <h1>Sign Up</h1>
        <form id="signupForm">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" id="name" placeholder="Enter your name">
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" placeholder="Enter your email">
            </div>
            <div class="form-group">
                <label for="password">Password:</label>
                <input type="password" id="password" placeholder="Enter your password">
            </div>
            <button type="button" class="btn-primary" onclick="handleSignUp()">Sign Up</button>
        </form>
    `;
}

let userName = '';

function handleSignUp() {
    const nameInput = document.getElementById('name').value;
    const emailInput = document.getElementById('email').value;
    const passwordInput = document.getElementById('password').value;

    if (nameInput && emailInput && passwordInput) {
        userName = nameInput; // Store == name
        localStorage.setItem('userName', userName); //==storage
        renderHomePage(); // Render the home page
    } else {
        alert('Please fill out all fields');
    }
}

function renderHomePage() {
    userName = localStorage.getItem('userName') || userName; // local storage
    rootDiv.innerHTML = `
        <h1>Welcome, ${userName}!</h1>
        <h2>Create a Post</h2>
        <textarea id="postContent" placeholder="What's on your mind?"></textarea><br>
        <button type="button" class="btn-success" onclick="handleCreatePost()">Post</button>
        <h3>Your Posts</h3>
        <ul id="postList" class="list-group"></ul>
    `;

    // Load posts (This is with the same one))
    posts = JSON.parse(localStorage.getItem('posts')) || [];
    renderPostList(); 
}

let posts = [];

function handleCreatePost() {
    const postContent = document.getElementById('postContent').value;

    if (postContent) {
        posts.push(postContent); // new post
        localStorage.setItem('posts', JSON.stringify(posts)); // Save (same thing) storage
        renderPostList(); // list of everything 
    } else {
        alert('Post content cannot be empty');
    }
}

function renderPostList() {
    const postListElement = document.getElementById('postList');
    postListElement.innerHTML = '';

    for (let i = 0; i < posts.length; i++) {
        const postItem = document.createElement('li');
        postItem.className = 'list-group-item';
        postItem.textContent = posts[i];

        //Edit 
        const editButton = document.createElement('button');
        editButton.textContent = 'Edit';
        editButton.className = 'btn-secondary';
        editButton.onclick = (function(index) {
            return function() {
                const newContent = prompt("Edit your post:", posts[index]);
                if (newContent) {
                    posts[index] = newContent; 
                    localStorage.setItem('posts', JSON.stringify(posts)); // Save storage
                    renderPostList(); //list
                }
            };
        })(i);

        //  Delete 
        const deleteButton = document.createElement('button');
        deleteButton.textContent = 'Delete';
        deleteButton.className = 'btn-danger';
        deleteButton.onclick = (function(index) {
            return function() {
                if (confirm("Are you sure you want to delete this post?")) {
                    posts.splice(index, 1); 
                    localStorage.setItem('posts', JSON.stringify(posts)); // Save storage
                    renderPostList(); // list
                }
            };
        })(i);

        postItem.appendChild(editButton);
        postItem.appendChild(deleteButton);
        postListElement.appendChild(postItem);
    }
}

// step 
document.addEventListener("DOMContentLoaded", function() {
    renderSignUp();
});
body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Times New Roman', sans-serif; /* Professional font */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #F2E1C3; /* Light color for background */
}

.container {
    position: relative;
    width: 400px;
    background: #D8B573; 
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);
    border-radius: 20px;
    padding: 40px;
}

h1 {/* heading */
    font-size: 30px;
    color: #A66F2E; 
    text-align: center; /* Center */
    margin-bottom: 20px; /* Space below */
}

.form-group {
    display: flex;
    justify-content: space-between; /* Space  */
    align-items: center; /* Center */
    margin: 30px 0; /* Space  */
    border-bottom: 2px solid #A63922; 
}

.form-group label {
    font-size: 16px;
    color: #A66F2E; /* Label color */
    margin-right: 20px; /* Space */
}

.form-group input {
    width: 100%;
    height: 40px; 
    font-size: 16px; 
    color: #333;
    padding: 10px 5px; 
    background: transparent; 
    border: none; 
    outline: none; 
}

button {
    width: 100%; 
    height: 40px;
    background: #A63922; 
    box-shadow: 0 0 10px rgba(166, 57, 34, 0.5); 
    font-size: 16px; 
    color: #fff; 
    font-weight: 500; 
    cursor: pointer; 
    border-radius: 20px; 
    border: none; 
    outline: none; 
    transition: background 0.3s; 
}

button:hover {
    background: #02385A; 
}

ul#postList {
    list-style-type: none;
    padding: 0; 
    margin-top: 20px; 
}

ul#postList li {
    background-color: #D8B573;
    color: #fff; 
    padding: 10px; 
    margin: 10px 0;
    border-radius: 10px; 
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3); 
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Single Page JS App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div id="root"></div>
    <script src="script.js"></script>
</body>
</html>
